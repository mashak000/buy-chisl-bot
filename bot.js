const { Bot, session, InlineKeyboard } = require("grammy");
require("dotenv").config();
const axios = require("axios");
const fs = require("fs");
const path = require("path");
const { google } = require("googleapis");
const { authorize } = require("./auth");

const bot = new Bot(process.env.BOT_TOKEN);

const auth = authorize();
const drive = google.drive({ version: "v3", auth });
const sheets = google.sheets({ version: "v4", auth });

const deliveryOptions = {
  courier: {
    price: 500,
    description: "Delivery by courier",
  },
  post: {
    price: 400,
    description: "Russian Post",
  },
  pickup: {
    price: 0,
    description: "Pickup",
  },
};

const getInvoice = (id, usersAmount) => {
  const invoice = {
    title: "–ß–∏—Å–ª–µ–Ω–Ω–∏—á–µ–∫ 2023",
    description: "‚ö†Ô∏è–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –∫–∞–ª–µ–Ω–¥–∞—Ä—å –Ω–∞ 2023 –≥–æ–¥‚ö†Ô∏è",
    currency: "RUB",
    prices: [{ label: "–ß–∏—Å–ª–µ–Ω–Ω–∏—á–µ–∫ 2023", amount: 100 * usersAmount }],
    payload: JSON.stringify({
      unique_id: `${id}_${Number(new Date())}`,
      provider_token: process.env.PROVIDER_TOKEN,
    }),
  };
  return JSON.parse(JSON.stringify(invoice));
};

const amountStep = (ctx) => {
  ctx.reply(`–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–π`);
  ctx.session.step = "amount";
};

const valueStep = (ctx) => {
  ctx.reply("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–æ–Ω–∞—Ç–∞ –Ω–µ –º–µ–Ω–µ–µ 500 —Ä—É–±–ª–µ–π (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)");
  ctx.session.step = "payment";
};

const paymentStep = async (ctx) => {
  const usersAmount = parseInt(ctx.msg.text, 10) * parseInt(ctx.session.amount);

  if (isNaN(usersAmount) || usersAmount < 500 || parseInt(ctx.msg.text, 10) < 500) {
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–µ –º–µ–Ω–µ–µ 500");
  } else {
    const totalAmount =
      deliveryOptions[ctx.session.delivery].price + usersAmount;
    const invoice = getInvoice(ctx.chat.id, totalAmount);
    try {
      await axios.post(
        `https://api.telegram.org/bot${process.env.BOT_TOKEN}/sendInvoice`,
        {
          chat_id: ctx.chat.id,
          title: invoice.title,
          description: invoice.description,
          currency: invoice.currency,
          prices: invoice.prices,
          payload: invoice.payload,
          provider_token: process.env.PROVIDER_TOKEN,
          start_parameter: "get_access",
        }
      );
      ctx.session.step = null;
    } catch (error) {
      console.error(
        "Error sending invoice:",
        error.response ? error.response.data : error.message
      );
    }
  }
};

// –Ω—É–∂–µ–Ω –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –∑–∞—è–≤–∫–∏ –º–∏–¥–ª–≤–∞—Ä–∞
bot.use(
  session({
    initial: () => ({
      step: null, // Track the current step
      delivery: null,
      formData: {}, // Store the user input
    }),
  })
);

// —Å–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –ø–∞–ø–∫—É
async function createFolder(folderName) {
  try {
    const fileMetadata = {
      name: folderName,
      mimeType: "application/vnd.google-apps.folder",
      parents: [process.env.GOOGLE_DRIVE_FOLDER_ID], // ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ø–∞–ø–∫–∏
    };
    const response = await drive.files.create({
      resource: fileMetadata,
      fields: "id",
    });
    console.log("Folder created on Google Drive, ID:", response.data.id);
    return response.data.id; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏
  } catch (error) {
    console.error("Error creating folder on Google Drive:", error);
    throw new Error("Failed to create folder on Google Drive");
  }
}

// –∑–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞ Google Drive
async function uploadFile(filePath, fileName, folderId) {
  try {
    const fileMetadata = {
      name: fileName,
      parents: [folderId],
    };
    const media = {
      mimeType: "application/octet-stream",
      body: fs.createReadStream(filePath),
    };
    const response = await drive.files.create({
      resource: fileMetadata,
      media: media,
      fields: "id",
    });
    console.log("File uploaded to Google Drive, ID:", response.data.id);
    return response.data.id;
  } catch (error) {
    console.error("Error uploading file to Google Drive:", error);
    throw new Error("Failed to upload file to Google Drive");
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
async function uploadFilesToNewFolder(folderName, files) {
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É –≤–Ω—É—Ç—Ä–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π
    const newFolderId = await createFolder(folderName);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –≤ –Ω–æ–≤—É—é –ø–∞–ø–∫—É
    for (const file of files) {
      await uploadFile(file.filePath, file.fileName, newFolderId);
    }

    console.log("All files uploaded successfully.");
    return newFolderId;
  } catch (error) {
    console.error("Error in uploading files to new folder:");
  }
}

// –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É
async function appendToSheet(values) {
  const resource = {
    values: [values],
  };
  await sheets.spreadsheets.values.append({
    spreadsheetId: process.env.GOOGLE_SHEET_ID,
    range: "aplication!A1",
    valueInputOption: "USER_ENTERED",
    resource: resource,
  });
}

bot.command("help", async (ctx) => {
  ctx.reply(
    "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–µ–Ω–∫–æ–ª–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—â–µ —Ä–∞–∑, –µ—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –Ω–∞–ø–∏—à–∏—Ç–µ @mashak000"
  );
});

bot.command("start", async (ctx) => {
  const markdownMessage = `
<b>–ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!</b>

<b>collective_ism</b> ‚Äî –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–µ –∫—É—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—å–Ω–∏—Ü –ß–∏—Å–ª–µ–Ω–Ω–∏—á–∫–∞. –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Ç–µ–æ—Ä–∏–µ–π –∏ –ø—Ä–∞–∫—Ç–∏–∫–æ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –∞ –Ω–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã –ª–µ–∂–∞—Ç –Ω–∞ —Å—Ç—ã–∫–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ, –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ, —Å–º–µ—à–Ω–æ–≥–æ –∏ –ø—Ä–æ—Å—Ç–æ–≥–æ.

–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–æ–π –≤ –∫–∞–Ω–∞–ª–µ <a href="https://t.me/collective_ism">collective_ism</a> –∏–ª–∏ –≤ <a href="https://www.instagram.com/collective_ism/">–∏–Ω—Å—Ç–∞–≥—Ä–∞–º–µ</a>.

<b>–ß–∏—Å–ª–µ–Ω–Ω–∏—á–µ–∫</b> ‚Äî —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç –æ—Ç—Ä—ã–≤–Ω–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∏–∑ 365 —Ä–∞–±–æ—Ç —Ä–∞–∑–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–≤. –ü—Ä–æ–µ–∫—Ç –±—ã–ª –∑–∞–ø—É—â–µ–Ω –≤ 2019 –≥–æ–¥—É –∏ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ 2024. –ó–∞ –ø—è—Ç—å –ª–µ—Ç –º—ã –ø—Ä–æ–≤–µ–ª–∏ –ø—è—Ç—å –æ–ø–µ–Ω-–∫–æ–ª–ª–æ–≤, –æ—Ç–æ–±—Ä–∞–ª–∏ –±–æ–ª–µ–µ 1,5 —Ç—ã—Å—è—á —Ä–∞–±–æ—Ç –∏ –Ω–∞–ø–µ—á–∞—Ç–∞–ª–∏ 5 –≤—ã–ø—É—Å–∫–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –ß–∏—Å–ª–µ–Ω–Ω–∏—á–µ–∫ 2023 ‚Äî –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—ã–ø—É—Å–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å ‚Äî –ø–æ—Å–≤—è—â–µ–Ω —Ñ–µ–Ω–æ–º–µ–Ω—É —à–∏—Ñ—Ä–∞, —Å–æ–∫—Ä—ã—Ç–∏—é, —É—Ç–∞–∏–≤–∞–Ω–∏—é –∏ –∏–Ω–æ—Å–∫–∞–∑–∞–Ω–∏—é.

–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –ß–∏—Å–ª–µ–Ω–Ω–∏—á–∫–µ –∏ –Ω–∞—à–µ–π —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ —á–∏—Ç–∞–π—Ç–µ –≤ <a href="https://obdn.ru/articles/chislennichek">–∂—É—Ä–Ω–∞–ª–µ ¬´–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ¬ª</a> –∏–ª–∏ —Å–ª—É—à–∞–π—Ç–µ –Ω–∞—à <a href="https://garagemca.org/event/public-talk-from-chislennichek-to-collective-writing">–∞—Ä—Ç–∏—Å—Ç-—Ç–æ–∫</a>, —Å–æ—Å—Ç–æ—è–≤—à–∏–π—Å—è –≥–æ–¥ –Ω–∞–∑–∞–¥ –≤ –ú—É–∑–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞ ¬´–ì–∞—Ä–∞–∂¬ª.

–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã? –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help`;

  try {
    const keyboard = new InlineKeyboard()
      .text("üìÜ last sale —á–∏—Å–ª–µ–Ω–Ω–∏—á–µ–∫ üìÜ", "buy")
      .row()
      .text("üì¨ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–ø–µ–Ω –∫–æ–ª–ª–µ üì¨", "apply");

    await ctx.reply(markdownMessage, {
      parse_mode: "HTML",
      reply_markup: keyboard,
      disable_web_page_preview: true,
    });
  } catch (error) {
    console.error("Error sending the message:", error);
    ctx.reply(
      "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    );
  }
});

// –ª–æ–≥–∏–∫–∞ –ø–æ–∫—É–ø–∫–∏
bot.callbackQuery("buy", async (ctx) => {
  try {
    const keyboard = new InlineKeyboard().text("–ö—É–ø–∏—Ç—å", "start_buy")
    await ctx.api.sendMediaGroup(ctx.chat.id, [
      { type: "photo", media: "https://imgur.com/49W6H4W" },
      { type: "photo", media: "https://imgur.com/srzaUGt" },
    ]);
    await ctx.reply(
      `<b>–ó–∞–±–µ—Ä–∏—Ç–µ —Å–µ–±–µ —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–ø—É—Å–∫–∞ –ß–∏—Å–ª–µ–Ω–Ω–∏—á–∫–∞ –∑–∞ –¥–æ–Ω–∞—Ç –æ—Ç 500—Ä!</b>

–¢–µ–º–æ–π –ß–∏—Å–ª–µ–Ω–Ω–∏—á–∫–∞ 2023 —Å—Ç–∞–ª–∞ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞ –≠.–ù.–ò.–ì.–ú.–ê. (–≠—Ç–æ –ù–∞–∑–≤–∞–Ω–∏–µ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ì–∞—Ä–∞–Ω—Ç–∏–∏ –ú–æ–ª—á–∞–Ω–∏—è –ê–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã). –Æ–±–∏–ª–µ–π–Ω—ã–π –ø—è—Ç—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ß–∏—Å–ª–µ–Ω–Ω–∏—á–µ–∫ –±—ã–ª –ø–æ—Å–≤—è—â–µ–Ω —à–∏—Ñ—Ä–∞–º, –∫–æ–¥–∞–º, –∑–Ω–∞–∫–∞–º –∏ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–º —Å–ø–æ—Å–æ–±–∞–º –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –æ—Å–º—ã—Å–ª–µ–Ω–∏—è. –®–∏—Ñ—Ä –≤–∏–¥–∏—Ç—Å—è –≥–ª–∞–≤–Ω–æ–π –¥–µ–π—Å—Ç–≤—É—é—â–µ–π —Å–∏–ª–æ–π –∏—Å–∫—É—Å—Å—Ç–≤–∞: –≥–µ—Ä–æ—è –∏ –∞–≤—Ç–æ—Ä–∞ –Ω–µ—Ç, –æ—Å—Ç–∞–ª–∏—Å—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ª–∞–±–∏—Ä–∏–Ω—Ç—ã –∏–∑ –∑–Ω–∞–∫–æ–≤, –∫–æ–¥–æ–≤ –∏ –æ—Ç—Å—ã–ª–æ–∫. 

–í–Ω—É—Ç—Ä–∏:

- 365 —Ä–∞–±–æ—Ç —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ –∏ –∞–≤—Ç–æ—Ä–æ–≤
- –ö—Ä–µ–ø–ª–µ–Ω–∏–µ, –ø–æ–∑–≤–æ–ª—è—é—â–µ–µ –ø–æ–≤–µ—Å–∏—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∏–ª–∏ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
- –ù–∞ –æ–±–æ—Ä–æ—Ç–µ –∫–∞–∂–¥–æ–≥–æ –ª–∏—Å—Ç–∞-–¥–Ω—è —Ä–∞–∑–º–µ—â–µ–Ω–∞ —ç–∫—Å–ø–ª–∏–∫–∞—Ü–∏—è, –Ω–∞–ø–∏—Å–∞–Ω–Ω–∞—è –∞–≤—Ç–æ—Ä–æ–º —Ä–∞–±–æ—Ç—ã
- 380 —Å—Ç—Ä–∞–Ω–∏—Ü, 8 –• 14,5 —Å–º, —Ü–≤–µ—Ç–Ω–∞—è –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –æ—Ñ—Å–µ—Ç–Ω–∞—è –ø–µ—á–∞—Ç—å (4+1)
      `,
      {
        parse_mode: "HTML",
        reply_markup: keyboard,
      }
    );
  } catch (error) {
    console.log(error);
  }
});

bot.callbackQuery("start_buy", (ctx) => {
  amountStep(ctx);
})

bot.callbackQuery("curier", async (ctx) => {
  ctx.session.delivery = "courier";
  await ctx.reply(
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
  );
  ctx.session.step = "delivery";
});

bot.callbackQuery("post", async (ctx) => {
  ctx.session.delivery = "post";
  await ctx.reply(
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏, –∏–Ω–¥–µ–∫—Å, –§–ò–û –ø–æ–ª—É—á–∞—Ç–µ–ª—è, –∞ —Ç–∞–∫–∂–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
  );
  ctx.session.step = "delivery";
});

bot.callbackQuery("pickup", async (ctx) => {
  ctx.session.delivery = "pickup";
  valueStep(ctx);
});

bot.on("pre_checkout_query", (ctx) => ctx.answerPreCheckoutQuery(true));

bot.on("message:successful_payment", async (ctx) => {
  const keyboard = new InlineKeyboard()
    .url("–¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª collective(ism)", "https://t.me/collective_ism")
    .row()
    .text("–û–ø–µ–Ω –∫–æ–ª–ª", "apply");
  await ctx.reply(
    "<b>–°–ø–∞—Å–∏–±–æ, –ø–ª–∞—Ç–µ–∂ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏</b>",
    {
      reply_markup: keyboard,
      parse_mode: "HTML",
    }
  );

  const deliveryData = ctx.session.deliveryData || "–í—ã–±—Ä–∞–Ω —Å–∞–º–æ–≤—ã–≤–æ–∑";
  const username = ctx.from.username;

  const combinedData = `–î–µ–≤–∞—á–∫–∏, –ø—Ä–∏—à–µ–ª –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑üíÖüíÖüíÖ\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–æ—Å—Ç–∞–≤–∫–µ: ${deliveryData}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${username}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${ctx.session.amount}`;

  await bot.api.sendMessage(process.env.CHAT_ID, combinedData);

  delete ctx.session.delivery;
  delete ctx.session.deliveryData;
});

// –ª–æ–≥–∏–∫–∞ –ø–æ –æ–ø–µ–Ω –∫–æ–ª–ª—É
bot.callbackQuery("apply", async (ctx) => {
  ctx.answerCallbackQuery();

  ctx.session.step = "curatorText";

  const keyboard = new InlineKeyboard()
    .text("–£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è", "rules")
    .row()
    .text("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", "start_apply");

  const message = `
  <b>¬´–ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –æ—Ç–∫–ª—é—á–∞—Ç –∑–∞–≤—Ç—Ä–∞, —á—Ç–æ –≤—ã –≤–æ–∑—å–º–µ—Ç–µ —Å —Å–æ–±–æ–π?¬ª</b>

–û–±–µ—â–∞–Ω–∏—è –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–æ–π —Å–≤–æ–±–æ–¥—ã –∏ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ—Å—Ç–∏ —ç–ø–æ—Ö–∏ —Ä–∞–Ω–Ω–µ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –Ω–µ –æ–ø—Ä–∞–≤–¥–∞–ª–∏—Å—å. –°–≤–æ–∏–º –ø–∏–æ–Ω–µ—Ä–∞–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤–∏–¥–µ–ª—Å—è —Å–ø–æ—Å–æ–±–æ–º –ø—Ä–æ—Ç–∏–≤–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å–µ–±—è –∫–æ–Ω—Ç—Ä–æ–ª—é —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ –∏–ª–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–π, –æ–¥–Ω–∞–∫–æ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ —Å–ª—É—á–∏–ª–æ—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—ã—Å—Ç—Ä–æ. –í –æ–Ω–ª–∞–π–Ω, –∫–∞–∫ –∏ –≤ –æ—Ñ—Ñ–ª–∞–π–Ω –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –µ—Å—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã, –Ω–æ —Ç–∞–∫–∂–µ ‚Äî —Å–µ—Ä—ã–µ –∑–æ–Ω—ã –∏ —Å–ª–µ–ø—ã–µ –ø—è—Ç–Ω–∞. –° –∫–∞–∂–¥—ã–º –≥–æ–¥–æ–º –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –≤—Å—ë —Å–∏–ª—å–Ω–µ–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∂–∏–∑–Ω—å. –ï—Å–ª–∏ –≤–∞–º –Ω–µ –ø–æ—Å—á–∞—Å—Ç–ª–∏–≤–∏–ª–æ—Å—å –∂–∏—Ç—å –≤ —É—Å–ª–æ–≤–∏—è—Ö —Ü–µ–Ω–∑—É—Ä—ã –∏ —Ä–µ–ø—Ä–µ—Å—Å–∏–π, —Ç–æ –≤—ã –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –ø–æ—Ä–æ–π –Ω–µ —Å—Ç–æ–∏—Ç –æ—Å—Ç–∞–≤–ª—è—Ç—å —Å–ª–µ–¥—ã.

–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –Ω–µ –æ–∫–∞–∑–∞–ª–æ—Å—å –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω—ã–º –∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: –º–µ—Å—Ç–æ –Ω–∞ –æ–±–ª–∞–∫–µ, –∂–µ—Å—Ç–∫–æ–º –¥–∏—Å–∫–µ –∏–ª–∏ —Ñ–ª–µ—à–∫–µ –Ω–µ–º–∏–Ω—É–µ–º–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è. –û–¥–Ω–∞–∫–æ —Å–±–æ—Ä –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—Ç—Å—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É: –º–æ–∂–Ω–æ –¥–æ–≤–æ–ª—å—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è –ø–∞–ø–∫–∞–º–∏ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –≤—Å–µ –Ω–∞ –∂–µ—Å—Ç–∫–∏–µ –¥–∏—Å–∫–∏, –∞ —Ç–∞–∫–∂–µ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–º –∏ –¥–∏–¥–∂–∏—Ç–∞–ª –∞—Ä—Ö–∏–≤–æ–º.

–ö–∞–∫ –ø–æ—è–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ –≤ –Ω–µ–º –º–æ–≥—É—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Ç–æ, –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø–∞–º—è—Ç—å, –∏ —Ç–æ, –∫–∞–∫ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏? –ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ ‚Äî —Å–µ–º–µ–π–Ω—ã–µ –∞–ª—å–±–æ–º—ã, –¥–Ω–µ–≤–Ω–∏–∫–∏, –∑–∞–ø–∏—Å–Ω—ã–µ –∫–Ω–∏–∂–∫–∏, –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º –∏ —Ö—Ä—É–ø–∫–æ—Å—Ç—å—é —Å–≤–æ–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –≤ —Ç–æ –≤—Ä–µ–º—è, –∫–∞–∫ –≤–µ–¥–µ–Ω–∏–µ –¥–∏–¥–∂–∏—Ç–∞–ª –∞—Ä—Ö–∏–≤–∞ –Ω–µ –≤—Å–µ–≥–¥–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ. –ù–∞–∫–æ–Ω–µ—Ü, —Å –≤–Ω—É—à–∏—Ç–µ–ª—å–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Å–ª–æ–∂–Ω–æ –±—ã—Ç—å –Ω–∞ —Ö–æ–¥—É –∏ –≤ –¥–≤–∏–∂–µ–Ω–∏–∏ ‚Äî –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ —Ç—è–≥–æ—Ç–∏—Ç –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –º–µ—Å—Ç—É. 

–í –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–µ—Ç –Ω–∞–∑—Ä–µ–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å: –∫–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –æ—Ç–∫–ª—é—á–∞—Ç? –ï—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏—Ç –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å? –ì–¥–µ –∫–æ–ª–ª–µ–∫—Ü–∏—è –±—É–¥–µ—Ç –≤ –±–æ–ª—å—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ‚Äî –æ—Ñ—Ñ–ª–∞–π–Ω –∏–ª–∏ –æ–Ω–ª–∞–π–Ω, –≤ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–º –∏–ª–∏ –¥–∏–¥–∂–∏—Ç–∞–ª –≤–∏–¥–µ? –°–≤–æ–±–æ–¥–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —Å–∫–ª–æ–Ω—è—Ç—å—Å—è –≤ –ø–æ–ª—å–∑—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ: –∂–µ—Å—Ç–∫–∏–π –¥–∏—Å–∫ —Å–æ —Å–Ω–∏–º–∫–∞–º–∏ 10 —Ç—ã—Å—è—á —Ä–∞–∫—É—à–µ–∫ —É–¥–æ–±–Ω–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∏–∑ 10 —Ç—ã—Å—è—á —Ä–∞–∫—É—à–µ–∫.

–ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è ‚Äî –æ—Å—Ç–∞—Ç–æ–∫ —Ç–∏—Ä–∞–∂–∞ –ß–∏—Å–ª–µ–Ω–Ω–∏—á–∫–∞ 2023 ‚Äî —Å–∫–æ—Ä–æ –≤—ã—Å–µ–ª–∏—Ç –Ω–∞—Å –∏–∑ –∫–≤–∞—Ä—Ç–∏—Ä—ã: –Ω–µ–ø—Ä–æ—Å—Ç–æ –¥–µ–ª–∏—Ç—å –¥–≤—É—Ö–∫–æ–º–Ω–∞—Ç–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å –• –∫–æ—Ä–æ–±–æ–∫ —Å –• —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –í —Å–≤–µ—Ç–µ –≥—Ä—è–¥—É—â–µ–≥–æ –ø–µ—Ä–µ–µ–∑–¥–∞ –º—ã –∑–∞–¥—É–º–∞–ª–∏—Å—å –æ —Ç–æ–º, –∫–∞–∫ –≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–æ –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ –≤ —É—Å–ª–æ–≤–∏—è—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π. –ò –∫–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö?
  `;

  try {
    await ctx.api.sendMediaGroup(ctx.chat.id, [
      { type: "photo", media: "https://imgur.com/nkPaI1l" },
      { type: "photo", media: "https://imgur.com/uV0vFJ9" },
    ]);
    ctx.reply(message, {
      reply_markup: keyboard,
      parse_mode: "HTML",
    });
  } catch (error) {
    console.log(error);
  }
});

bot.callbackQuery("rules", (ctx) => {
  const keyboard = new InlineKeyboard().text("–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", "start_apply");

  const text = `<b>–£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è:</b>

- —Ä–∞–±–æ—Ç–∞, –æ—Å–º—ã—Å–ª—è—é—â–∞—è –∑–∞–¥–∞–Ω–Ω—É—é —Ç–µ–º—É
- –ª—é–±–æ–π –º–µ–¥–∏—É–º (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ –¥–∏–¥–∂–∏—Ç–∞–ª —Ñ–æ—Ä–º–∞—Ç)
- –¥–æ 10 –µ–¥–∏–Ω–∏—Ü
- –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ <a href="https://t.me/collective_ism">collective_ism</a>
- —Å–±–æ—Ä —Ä–∞–±–æ—Ç –¥–æ 31 –æ–∫—Ç—è–±—Ä—è`;

  ctx.reply(text, {
    parse_mode: "HTML",
    reply_markup: keyboard,
  });
});

bot.callbackQuery("start_apply", (ctx) => {
  ctx.answerCallbackQuery();
  ctx.session.step = "bioInfo";
  ctx.reply("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?");
});

// —Å–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —Ñ–∞–π–ª–∞ –Ω–∞ –≥—É–≥–ª –¥–∏—Å–∫–µ
async function getShareableFolderLink(fileId) {
  try {
    // First, create permission to make the folder shareable
    await drive.permissions.create({
      fileId: fileId,
      requestBody: {
        role: "reader",
        type: "anyone",
      },
    });

    // Fetch the folder metadata to get the webViewLink
    const folder = await drive.files.get({
      fileId: fileId,
      fields: "webViewLink",
    });

    return folder.data.webViewLink;
  } catch (error) {
    console.error("Error generating shareable folder link:");
    throw error;
  }
}

bot.callbackQuery("saveAndSend", async (ctx) => {
  const session = ctx.session;

  ctx.answerCallbackQuery();
  ctx.reply("üíΩ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è");
  if (session.formData.files && session.formData.files.length > 0) {
    try {
      const newFolderId = await uploadFilesToNewFolder(
        session.formData.name,
        session.formData.files
      );
      for (const file of session.formData.files) {
        try {
          fs.unlink(file.filePath, (err) => {
            if (err) {
              console.error(`Error deleting file ${file.filePath}:`, err);
            } else {
              console.log(`Deleted local file ${file.filePath}`);
            }
          });
        } catch (error) {
          console.error(
            `Failed to upload or delete file ${file.fileName}:`,
            error
          );
        }
      }
      const shareableLink = await getShareableFolderLink(newFolderId);

      const values = [];
      for (let key in session.formData) {
        if (key === "username") {
          const userProfileLink = session.formData.username
            ? `=HYPERLINK("https://t.me/${session.formData.username}")`
            : "No username";
          values.push(userProfileLink);
        } else if (key !== "files") {
          values.push(session.formData[key]);
        } else {
          values.push(`=HYPERLINK("${shareableLink}")`);
        }
      }
      await appendToSheet(values);
      session.step = "finalStep";
      const keyboard = new InlineKeyboard()
        .url("–¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª collective(ism)", "https://t.me/collective_ism")
        .row()
        .text("–ö—É–ø–∏—Ç—å –ß–∏—Å–ª–µ–Ω–Ω–∏—á–µ–∫ 2023", "buy");
      ctx.reply(
        "<b>–ì–æ—Ç–æ–≤–æ! –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É, –æ—Ç–≤–µ—Ç–∏–º –≤ –Ω–∞—á–∞–ª–µ –Ω–æ—è–±—Ä—è</b>",
        {
          parse_mode: "HTML",
          reply_markup: keyboard,
        }
      );
    } catch (error) {
      // console.error(`Failed to upload sheet`, error);
      console.error(`Failed to upload sheet`);
    }
    session.step = "finalStep";
  } else {
    ctx.reply("–í—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.");
  }
});

async function showEditMenu(ctx) {
  const keyboard = new InlineKeyboard()
    .text("–ò–º—è", "editBio")
    .text("–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ—Ü—Å–µ—Ç—å", "editSocialMedia")
    .row()
    .text("–ù–∞–∑–≤–∞–Ω–∏–µ", "editNameOfArt")
    .text("–û–ø–∏—Å–∞–Ω–∏–µ", "editDesc")
    .row()
    .text("–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã –∑–∞–Ω–æ–≤–æ", "editFiles")
    .row()
    .text("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", "saveAndSend");
  const allInfo = `–ò–º—è: ${ctx.session.formData.name}\n–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ—Ü—Å–µ—Ç—å: ${ctx.session.formData.socialMedia}\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: ${ctx.session.formData.nameofart}\n–û–ø–∏—Å–∞–Ω–∏–µ: ${ctx.session.formData.description}\n–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${ctx.session.formData.files.length}`;
  await ctx.reply(`${allInfo}\n\n –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å:`, {
    reply_markup: keyboard,
  });
}

bot.callbackQuery("edit", async (ctx) => {
  ctx.answerCallbackQuery();
  await showEditMenu(ctx);
});

bot.callbackQuery("editBio", async (ctx) => {
  ctx.session.step = "bioInfo";
  ctx.reply("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?");
});

bot.callbackQuery("editSocialMedia", async (ctx) => {
  ctx.session.step = "socialMedia";
  ctx.reply("–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏");
});

bot.callbackQuery("editNameOfAr", (ctx) => {
  ctx.session.step = "nameOfArt";
  ctx.reply("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã");
});

bot.callbackQuery("editDesc", async (ctx) => {
  ctx.session.step = "collectDescription";
  ctx.reply("–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã");
});

bot.callbackQuery("editFiles", async (ctx) => {
  ctx.session.step = "collectFile";
  ctx.session.formData.files = [];
  ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ 10 —Ñ–∞–π–ª–æ–≤ —Å –≤–∞—à–µ–π —Ä–∞–±–æ—Ç–æ–π.");
});

bot.callbackQuery("confirmSubmission", async (ctx) => {
  const session = ctx.session;

  ctx.answerCallbackQuery();
  if (session.formData.files && session.formData.files.length > 0) {
    await ctx.reply("–§–∞–π–ª—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã");
    const keyboard = new InlineKeyboard()
      .text("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "edit")
      .text("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", "saveAndSend");
    const allInfo = `–ò–º—è: ${session.formData.name}\n—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ—Ü—Å–µ—Ç—å: ${ctx.session.formData.socialMedia}\n–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: ${ctx.session.formData.nameofart}\n–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã: ${session.formData.description}\n–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${session.formData.files.length} \n\n–ù–∞–∂–∏–º–∞—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º –æ–ø–µ–Ω–∫–æ–ª–ª–∞.`;
    ctx.reply(allInfo, {
      reply_markup: keyboard,
    });
  } else {
    ctx.reply("–í—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.");
    session.step = "collectFile";
  }
});

bot.on("message", async (ctx) => {
  const session = ctx.session;

  // logic for buying
  if (session.step === "payment") {
    await paymentStep(ctx);
  } else if (session.step === "amount") {
    ctx.session.amount = ctx.message.text;
    const keyboard = new InlineKeyboard()
      .text("–ö—É—Ä—å–µ—Ä–æ–º (–ø–æ –ú–æ—Å–∫–≤–µ) ‚Äî 500—Ä.", "curier")
      .row()
      .text("–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏ ‚Äî 400—Ä.", "post")
      .row()
      .text("–°–∞–º–æ–≤—ã–≤–æ–∑ (–º–µ—Ç—Ä–æ —É–ª. 1905 –≥–æ–¥–∞)", "pickup");

    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏üëá", {
      reply_markup: keyboard,
    });
  } else if (session.step === "delivery") {
    session.deliveryData = ctx.msg.text;
    await ctx.reply("<b>–°–ø–∞—Å–∏–±–æ, –º—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç–∞–≤–∫–µ</b>", {
      parse_mode: "HTML",
    });
    valueStep(ctx);
  }

  //logic for open call
  if (session.step === "bioInfo") {
    session.formData.name = ctx.message.text;
    session.formData.username = ctx.message.from.username;
    if (!session.formData.socialMedia) {
      ctx.reply("–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à—É —Å–æ—Ü—Å–µ—Ç—å");
      session.step = "socialMedia";
    } else {
      showEditMenu(ctx);
    }
  } else if (session.step === "socialMedia") {
    session.formData.socialMedia = ctx.message.text;
    if (!session.formData.nameofart) {
      ctx.reply("–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã");
      session.step = "nameOfArt";
    } else {
      showEditMenu(ctx);
    }
  } else if (session.step === "nameOfArt") {
    session.formData.nameofart = ctx.message.text;
    if (!session.formData.description) {
      ctx.reply("–û–ø–∏—Å–∞–Ω–∏–µ");
      session.step = "collectDescription";
    } else {
      showEditMenu(ctx);
    }
  } else if (session.step === "collectDescription") {
    session.formData.description = ctx.message.text;
    if (!session.formData.files) {
      ctx.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ 10 —Ñ–∞–π–ª–æ–≤ —Å –≤–∞—à–µ–π —Ä–∞–±–æ—Ç–æ–π.");
      session.step = "collectFile";
    } else {
      showEditMenu(ctx);
    }
  } else if (session.step === "collectFile") {
    const keyboard = new InlineKeyboard().text("–ì–æ—Ç–æ–≤–æ", "confirmSubmission");

    if (!session.formData.files) {
      session.formData.files = [];
    }

    if (!session.mediaGroupTimeout) {
      session.mediaGroupTimeout = null;
    }

    const files = [];

    try {
      if (ctx.message.document) {
        files.push(ctx.message.document);
      } else if (ctx.message.photo) {
        files.push(ctx.message.photo[ctx.message.photo.length - 1]);
      } else if (ctx.message.video) {
        files.push(ctx.message.video);
      } else if (ctx.message.audio) {
        files.push(ctx.message.audio);
      } else if (ctx.message.voice) {
        files.push(ctx.message.voice);
      } else {
        // Unsupported file type
        throw new Error("Unsupported file format.");
      }

      for (const fileObject of files) {
        const fileId = fileObject.file_id;
        const file = await ctx.api.getFile(fileId);
        const fileUrl = `https://api.telegram.org/file/bot${process.env.BOT_TOKEN}/${file.file_path}`;
        const fileName = ctx.message.document
          ? ctx.message.document.file_name
          : ctx.message.photo
          ? `photo_${Date.now()}.jpg`
          : ctx.message.video
          ? `video_${Date.now()}.mp4`
          : ctx.message.audio
          ? `audio_${Date.now()}.mp3`
          : ctx.message.voice
          ? `voice_${Date.now()}.ogg`
          : `file_${Date.now()}`;

        const filePath = path.join(__dirname, fileName);

        const response = await axios({
          url: fileUrl,
          method: "GET",
          responseType: "stream",
        });

        response.data.pipe(fs.createWriteStream(filePath));
        await new Promise((resolve) => response.data.on("end", resolve));

        session.formData.files.push({
          filePath: filePath,
          fileName: fileName,
        });

        if (session.formData.files.length >= 10) {
          ctx.reply("–í—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤", {
            reply_markup: keyboard,
          });
          return;
        }
      }

      // Clear any existing timeout to wait for more files
      if (session.mediaGroupTimeout) {
        clearTimeout(session.mediaGroupTimeout);
      }

      // Set a timeout to detect when no more files are arriving
      session.mediaGroupTimeout = setTimeout(async () => {
        ctx.reply(
          `–í—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏ ${session.formData.files.length} —Ñ–∞–π–ª${
            parseInt(session.formData.files.length) === 1
              ? ""
              : [2, 3, 4].includes(parseInt(session.formData.files.length))
              ? "a"
              : "–æ–≤"
          }. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ ${10 - session.formData.files.length}.`,
          {
            reply_markup: keyboard,
          }
        );
        session.mediaGroupTimeout = null;
      }, 1000);
    } catch (error) {
      console.error("Error processing files:", error.message);
      ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."
      );
    }
  }

  // if (session.step === "finalStep") {
  //   ctx.reply("–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É, –æ—Ç–≤–µ—Ç–∏–º –≤ –ø–µ—Ä–≤–æ–π –Ω–µ–¥–µ–ª–µ –Ω–æ—è–±—Ä—è");
  // }
});

bot.start();
